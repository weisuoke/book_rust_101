fn main() {
  // 在其他语言中，使用索引方式访问字符串的某个字符或者子串是很正常的行为，但是在 Rust 中就会报错
  let s1 = String::from("hello");
  let h = s1[0];

  // 字符串的底层的数据存储格式实际上是[u8]，一个字节数组。对于 let hello = String::from("Hola"); 这行代码来说
  // Hola 的长度是 4 个字节，因为 "Hola" 中每个字母在 UTF-8 编码中仅占用 1 个字节。

  // 但是对于下面的代码
  let hello = String::from("中国人");
  // 如果问你该字符串多长，你可能会说 3，但是实际上是 9 个字节的长度，因为大部分常用汉字在 UTF-8 中的长度是 3 个字节，因此这种情况下对 hello 进行索引，访问 &hello[0] 没有任何意义，因为你取不到 中 这个字符，而是取到了这个字符三个字节中的第一个字节，这是一个非常奇怪而且难以理解的返回值。
}
